
#ARG BASE=python:3.8-slim
#ARG BASE=python:3.10-slim
#ARG BASE=python:3.11-slim
#FROM ${BASE}
# Torch 2.7 + CUDA 12.6 (cudnn9) – ajustá si usás otra tag
FROM pytorch/pytorch:2.7.0-cuda12.6-cudnn9-runtime
FROM pytorch/pytorch:2.4.1-cuda12.6-cudnn9-runtime

# (Optional but safer) make apt quiet in Docker
#ARG DEBIAN_FRONTEND=noninteractive

# Set the working directory to /app
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y cmake build-essential
RUN pip install --upgrade pip
# Copy the requirements.txt file
#COPY requirements.txt .
COPY requirements_filtered.txt .

# Install torch, torchvision, torchaudio, and Cython first
#RUN pip install --no-cache-dir torch torchvision torchaudio Cython
RUN pip install --no-cache-dir torch torchvision torchaudio Cython

# (optional) avoid apt prompts
#ENV DEBIAN_FRONTEND=noninteractive

# instala torch y natten compatibles (cu121 o cpu según tu caso)
# GPU/cu121:
#RUN pip install --no-cache-dir --index-url https://download.pytorch.org/whl/cu121 \
#    torch==2.4.1 torchvision==0.19.1 torchaudio==2.4.1




# Python ya es 3.10+ en estas imágenes; si no, usa una base con Python >= 3.10
# Evitá compilar: instalá el wheel precompilado
RUN pip install --no-cache-dir natten==0.21.0+torch270cu126 -f https://whl.natten.org

    # works in Mac OS arm
#RUN pip install natten==0.15.0 
# (linux x86_64) gpu?
#RUN pip install --no-cache-dir "natten==0.17.4+torch240cu121" \
#    -f https://shi-labs.com/natten/wheels

# cpu only version
#RUN pip install --no-cache-dir "natten==0.17.4+torch240cpu" \
#    -f https://shi-labs.com/natten/wheels

# Install the rest of the dependencies
RUN pip install --no-cache-dir -r requirements_filtered.txt
RUN pip install madmom==0.16.1
#RUN pip install madmom
# quita si antes instalaste madmom por pip
#RUN pip uninstall -y madmom || true
# instala desde el repo (compila las extensiones C)
#RUN apt-get update && apt-get install -y --no-install-recommends \
#     git \
#     cmake \
#     build-essential \
#  && rm -rf /var/lib/apt/lists/*
# RUN pip install --no-cache-dir "madmom @ git+https://github.com/CPJKU/madmom@master"

# Copy the entire project to the /app directory
# Copy the current directory (project files) to the /app directory
COPY . .
# Install the project in editable mode
RUN pip install -e .

RUN pip install google-cloud-storage

# Copy the Python script into the container (you need to have a script in the same directory)
COPY process_audio.py /app/process_audio.py

RUN mkdir -p /app/output

# Set the working directory
WORKDIR /app

# Use the Python script as the entry point
CMD ["python", "process_audio.py"]

