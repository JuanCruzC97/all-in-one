# Base con Torch 2.7 + CUDA 12.6 + cuDNN9 (Python 3.10+)
FROM pytorch/pytorch:2.6.0-cuda12.6-cudnn9-runtime

# Evitar prompts de apt
ENV DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1

# Directorio de trabajo
WORKDIR /app

# Herramientas de build (para extensiones C), y limpieza de apt
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential cmake git \
  && rm -rf /var/lib/apt/lists/*

# Subí pip y prepará cython/numpy (madmom compila extensiones)
RUN python -m pip install --upgrade pip \
 && pip install cython numpy

# Step #1: ERROR: Could not find a version that satisfies the requirement natten==0.15.0+torch260cu126 (from versions: 0.14.2.post4, 0.14.4, 0.14.5, 0.14.6, 0.15.0, 0.15.1, 0.17.0, 0.17.1, 0.17.3, 0.17.4, 0.17.5, 0.17.5+torch250cpu, 0.17.5+torch250cu121, 0.17.5+torch250cu124, 0.17.5+torch260cpu, 0.17.5+torch260cu124, 0.17.5+torch260cu126, 0.20.0, 0.20.0+torch270cu126, 0.20.0+torch270cu128, 0.20.1, 0.20.1+torch270cu126, 0.20.1+torch270cu128, 0.21.0, 0.21.0+torch270cu126, 0.21.0+torch270cu128)

# NATTEN: wheel precompilado que MATCHEA Torch 2.7 + cu12.6
# (no requiere CUDA toolkit ni compilar)
#RUN pip install "natten==0.15.0" -f https://whl.natten.org
# CPU
# RUN pip install "natten==0.17.5+torch250cpu" -f https://whl.natten.org

# GPU
# RUN pip install "natten==0.17.5+torch250cu121" -f https://whl.natten.org
#torch 2.6
RUN pip install "natten==0.17.5+torch260cu126" -f https://whl.natten.org
# RUN pip install "natten==0.21.0+torch270cu126" -f https://whl.natten.org

# madmom compatible con Python 3.10+ (instala desde ZIP, sin git)
# RUN pip install "madmom @ https://github.com/CPJKU/madmom/archive/refs/heads/${MADMOM_REF}.zip"
#RUN pip install madmom==0.16.1
# Clona con submódulos y instala
ARG MADMOM_REF=main
RUN git clone --depth=1 --branch ${MADMOM_REF} --recurse-submodules \
      https://github.com/CPJKU/madmom /tmp/madmom \
 && cd /tmp/madmom && git submodule update --init --recursive \
 && python -m pip install .

# Dependencias de la app (revisa que NO pinneen numpy viejo)
# Sube primero el archivo para cache de capas
COPY requirements_filtered.txt .
RUN pip install -r requirements_filtered.txt
RUN pip install google-cloud-storage

# Copiá el código y tu script
COPY . .
RUN pip install -e .

# Salidas
RUN mkdir -p /app/output

# Entry point
CMD ["python", "process_audio.py"]